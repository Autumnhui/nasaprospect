/* utility 
-------------------------*/

.unselectable {
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -o-user-select: none;
    user-select: none;   
}

/* Hide from both screenreaders and browsers: h5bp.com/u */
.hidden { display: none !important; visibility: hidden !important; }

/* Hide only visually, but have it available for screenreaders: h5bp.com/v */
.visuallyhidden { border: 0; clip: rect(0 0 0 0); height: 1px; margin: -1px; overflow: hidden; padding: 0; position: absolute; width: 1px; }

/* Extends the .visuallyhidden class to allow the element to be focusable when navigated to via the keyboard: h5bp.com/p */
.visuallyhidden.focusable:active, .visuallyhidden.focusable:focus { clip: auto; height: auto; margin: 0; overflow: visible; position: static; width: auto; }

/* Hide visually and from screenreaders, but maintain layout */
.invisible { visibility: hidden; }

.flush {
    padding: 0;
    margin: 0;
}

.inline-block {
    display:inline-block;
	*display:inline;
	zoom:1;
}

.inline {
    
    p {
        margin: 0;
    }
    
}

.ignore-pointer, .ignore-pointer-temporary {
	pointer-events: none;
}

.dim {
	
	&:not(.active) {
		opacity: 0.65;
	}
	
}

a.dim:hover, button.dim:hover, .btn.dim:hover {
	opacity: 1;
}

.disabled {
	cursor: default !important;
	.ignore-pointer;
	
	* {
		.ignore-pointer;
	}
}

.draggable {
	.inline-block;
	list-style: none;
	.unselectable;
	-webkit-touch-callout: none; 
	-webkit-tap-highlight-color: rgba(0,0,0,0);
}

/* dimensions
-------------------------------------------------------------------------------*/

.fullWidth {
    width: 100%;
}

.fullHeight {
    height: 100%;
}

.fullMin {
    min-width:100%;
    min-height:100%;
}

.fullMinHack {
    min-width:100%;
    min-height:100%;
    width:auto !important;
    height:auto !important;
    width:100%;
    height:100%;
}

.fullscreen {
	.fullWidth;
	.fullHeight;
	margin: 0;
	padding: 0;
}

.fullscreenMin {
	.fullscreen;
	.fullMin;
}

.fullscreenTopLeft {
	.fullscreen;
	position: absolute;
	left: 0;
	top: 0;
}

.fullscreenTopLeftMin {
	.fullscreenMin;
	position: absolute;
	left: 0;
	top: 0;
}

.fullscreenTopLeftNoWidth {
	.fullHeight;
	.fullMin;
	position: absolute;
	left: 0;
	top: 0;
}